// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider              = "zod-prisma"
  output                = "./zod" // (default) the directory where generated zod schemas will be saved
  relationModel         = true // (default) Create and export both plain and related models.
  modelCase             = "camelCase" // Output models using camel case (ex. userModel, postModel)
  modelSuffix           = "Schema" // (default) Suffix to apply to your prisma models when naming Zod schemas
  useDecimalJs          = true // represent the prisma Decimal type using Decimal.js (as Prisma does)
  prismaJsonNullability = true // (default) uses prisma's scheme for JSON field nullability
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model User {
  id               String    @id @default(cuid())
  sessions         Session[]
  name             String    @default("")
  lastName         String?   @default("")
  email            String    @unique @default("")
  phoneNumber      String?   @default("")
  salary           Float     @default(0.00)
  days             Int       @default(0)
  hours            Int       @default(0)
  hashed_password  String    @default("")
  hour_value       Float     @default(0.00)
  extra_hour_value Float     @default(0.00)
  image            String?   @default("/images/defaultUser.jpg")
  Extras           Extras[]
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model Extras {
  id               String  @id @default(cuid())
  date             String  @default("")
  start_hour       String  @default("00:00")
  end_hour         String  @default("00:00")
  description      String  @default("")
  hasDiscounted    Boolean @default(false)
  discounted_hours String  @default("00:00")
  hours_make       String  @default("00:00")
  gains            Float   @default(0.0)

  user   User   @relation(references: [id], fields: [userId], onDelete: Cascade)
  userId String
}
